{
    "project": {},
    "files": {
        "yagl-ecs\\src\\Entity.js": {
            "name": "yagl-ecs\\src\\Entity.js",
            "modules": {
                "ecs": 1
            },
            "classes": {
                "Entity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "yagl-ecs\\src\\System.js": {
            "name": "yagl-ecs\\src\\System.js",
            "modules": {},
            "classes": {
                "System": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "yagl-ecs\\src\\ecs.js": {
            "name": "yagl-ecs\\src\\ecs.js",
            "modules": {},
            "classes": {
                "ECS": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "yagl-ecs\\src\\uid.js": {
            "name": "yagl-ecs\\src\\uid.js",
            "modules": {
                "uid": 1
            },
            "classes": {
                "UIDGenerator": 1,
                "UID": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ecs": {
            "name": "ecs",
            "submodules": {},
            "elements": {},
            "classes": {
                "Entity": 1,
                "System": 1,
                "ECS": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 16
        },
        "uid": {
            "name": "uid",
            "submodules": {},
            "elements": {},
            "classes": {
                "UIDGenerator": 1,
                "UID": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "yagl-ecs\\src\\uid.js",
            "line": 81
        }
    },
    "classes": {
        "Entity": {
            "name": "Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ecs",
            "namespace": "",
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 13,
            "description": "An entity.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "idOrUidGenerator",
                    "description": "The entity id if\na Number is passed. If an UIDGenerator is passed, the entity will use\nit to generate a new id. If nothing is passed, the entity will use\nthe default UIDGenerator.",
                    "type": "Number|UIDGenerator",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "components",
                    "description": "An array of initial components.",
                    "type": "Array[Component]",
                    "optional": true,
                    "optdefault": "[]"
                }
            ]
        },
        "System": {
            "name": "System",
            "shortname": "System",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ecs",
            "namespace": "",
            "file": "yagl-ecs\\src\\System.js",
            "line": 15,
            "description": "A system update all eligible entities at a given frequency.\nThis class is not meant to be used directly and should be sub-classed to\ndefine specific logic.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "frequency",
                    "description": "Frequency of execution.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ]
        },
        "ECS": {
            "name": "ECS",
            "shortname": "ECS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ecs",
            "namespace": "",
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 16,
            "is_constructor": 1
        },
        "UIDGenerator": {
            "name": "UIDGenerator",
            "shortname": "UIDGenerator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "uid",
            "namespace": "",
            "file": "yagl-ecs\\src\\uid.js",
            "line": 44,
            "description": "Generate unique sequences of Numbers. Can be salted (up to 9999 salts)\nto generate differents ids.\n\nTo work properly, ECS needs to associate an unique id with each entity. But\nto preserve efficiency, the unique id must be a Number (more exactly a safe \ninteger).\n\nThe basic implementation would be an incremented Number to generate a unique\nsequence, but this fails when several ecs instances are running and creating\nentities concurrently (e.g. in a multiplayer networked game). To work around\nthis problem, ecs provide UIDGenerator class which allow you to salt your \ngenerated ids sequence. Two generators with different salts will NEVER \ngenerate the same ids.\n\nCurrently, there is a maxumum of 9999 salts and about 900719925473 uid per\nsalt. These limits are hard-coded, but I plan to expose these settings in\nthe future.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "salt",
                    "description": "The salt to use for this generator. Number \nbetween 0 and 9999 (inclusive).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "UID": {
            "name": "UID",
            "shortname": "UID",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "uid",
            "namespace": "",
            "file": "yagl-ecs\\src\\uid.js",
            "line": 81
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 25,
            "description": "Unique identifier of the entity.",
            "itemtype": "property",
            "name": "id",
            "type": "Number",
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 47,
            "description": "Systems applied to the entity.",
            "itemtype": "property",
            "name": "systems",
            "type": "Array[System]",
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 54,
            "description": "Indiquate a change in components (a component was removed or added)\nwhich require to re-compute entity eligibility to all systems.",
            "itemtype": "property",
            "name": "systemsDirty",
            "type": "Boolean",
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 62,
            "description": "Components of the entity stored as key-value pairs.",
            "itemtype": "property",
            "name": "components",
            "type": "Object",
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 84,
            "description": "A reference to parent ECS class.",
            "itemtype": "property",
            "name": "ecs",
            "type": "ECS",
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 90,
            "description": "Set the parent ecs reference.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ecs",
                    "description": "An ECS class instance.",
                    "type": "ECS"
                }
            ],
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 100,
            "description": "Set the systems dirty flag so the ECS knows this entity \nneeds to recompute eligibility at the beginning of next \ntick.",
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 113,
            "description": "Add a system to the entity.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "system",
                    "description": "The system to add.",
                    "type": "System"
                }
            ],
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 122,
            "description": "Remove a system from the entity.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "system",
                    "description": "The system reference to remove.",
                    "type": "System"
                }
            ],
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 135,
            "description": "Add a component to the entity. WARNING this method does not copy\ncomponents data but assign directly the reference for maximum\nperformances. Be sure not to pass the same component reference to\nmany entities.",
            "params": [
                {
                    "name": "name",
                    "description": "Attribute name of the component to add.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Component data.",
                    "type": "Object"
                }
            ],
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 148,
            "description": "Remove a component from the entity. To preserve performances, we \nsimple set the component property to `undefined`. Therefore the \nproperty is still enumerable after a call to removeComponent()",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the component to remove.",
                    "type": "String"
                }
            ],
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 163,
            "description": "Update a component field by field, NOT recursively. If the component\ndoes not exists, this method create it silently.",
            "itemtype": "method",
            "name": "updateComponent",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the component",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Dict of attributes to update",
                    "type": "Object"
                }
            ],
            "example": [
                "\n  entity.addComponent('kite', {vel: 0, pos: {x: 1}});\n  // entity.component.pos is '{vel: 0, pos: {x: 1}}'\n  entity.updateComponent('kite', {angle: 90, pos: {y: 1}});\n  // entity.component.pos is '{vel: 0, angle: 90, pos: {y: 1}}'"
            ],
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 189,
            "description": "Update a set of components.",
            "params": [
                {
                    "name": "componentsData",
                    "description": "Dict of components to update.",
                    "type": "Object"
                }
            ],
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\Entity.js",
            "line": 201,
            "description": "Dispose the entity.",
            "access": "private",
            "tagname": "",
            "class": "Entity",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 21,
            "description": "Frequency of update execution, a frequency of `1` run the system every\nupdate, `2` will run the system every 2 updates, ect.",
            "itemtype": "property",
            "name": "frequency",
            "type": "Number",
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 28,
            "description": "Entities of the system.",
            "itemtype": "property",
            "name": "entities",
            "type": "Array[Entity]",
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 35,
            "description": "Add an entity to the system entities.",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to add to the system.",
                    "type": "Entity"
                }
            ],
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 46,
            "description": "Remove an entity from the system entities. exit() handler is executed\nonly if the entity actually exists in the system entities.",
            "params": [
                {
                    "name": "entity",
                    "description": "Reference of the entity to remove.",
                    "type": "Entity"
                }
            ],
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 62,
            "description": "Apply update to each entity of this system.",
            "itemtype": "method",
            "name": "updateAll",
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 76,
            "description": "dispose the system by exiting all the entities",
            "itemtype": "method",
            "name": "dispose",
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 88,
            "description": "Abstract method to subclass. Called once per update, before entities\niteration.",
            "itemtype": "method",
            "name": "preUpdate",
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 95,
            "description": "Abstract method to subclass. Called once per update, after entities\niteration.",
            "itemtype": "method",
            "name": "postUpdate",
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 102,
            "description": "Abstract method to subclass. Should return true if the entity is eligible\nto the system, false otherwise.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to test.",
                    "type": "Entity"
                }
            ],
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 112,
            "description": "Abstract method to subclass. Called when an entity is added to the system.",
            "itemtype": "method",
            "name": "enter",
            "params": [
                {
                    "name": "entity",
                    "description": "The added entity.",
                    "type": "Entity"
                }
            ],
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 119,
            "description": "Abstract method to subclass. Called when an entity is removed from the system.",
            "itemtype": "method",
            "name": "exit",
            "params": [
                {
                    "name": "entity",
                    "description": "The removed entity.",
                    "type": "Entity"
                }
            ],
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\System.js",
            "line": 126,
            "description": "Abstract method to subclass. Called for each entity to update. This is\nthe only method that should actual mutate entity state.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to update.",
                    "type": "Entity"
                }
            ],
            "class": "System",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 21,
            "description": "Store all entities of the ECS.",
            "itemtype": "property",
            "name": "entities",
            "type": "{Array}",
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 29,
            "description": "Store entities which need to be tested at beginning of next tick.",
            "itemtype": "property",
            "name": "entitiesSystemsDirty",
            "type": "{Array}",
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 37,
            "description": "Store all systems of the ECS.",
            "itemtype": "property",
            "name": "systems",
            "type": "{Array}",
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 45,
            "description": "Count how many updates have been done.",
            "itemtype": "property",
            "name": "updateCounter",
            "type": "{Number}",
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 55,
            "description": "Retrieve an entity by id",
            "params": [
                {
                    "name": "id",
                    "description": "id of the entity to retrieve",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The entity if found null otherwise",
                "type": "Entity"
            },
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 69,
            "description": "Add an entity to the ecs.",
            "itemtype": "method",
            "name": "addEntity",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to add.",
                    "type": "Entity"
                }
            ],
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 79,
            "description": "Remove an entity from the ecs by reference.",
            "itemtype": "method",
            "name": "removeEntity",
            "params": [
                {
                    "name": "entity",
                    "description": "reference of the entity to remove",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "the remove entity if any",
                "type": "Entity"
            },
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 101,
            "description": "Remove an entity from the ecs by entity id.",
            "itemtype": "method",
            "name": "removeEntityById",
            "params": [
                {
                    "name": "entityId",
                    "description": "id of the entity to remove",
                    "type": "Entity"
                }
            ],
            "return": {
                "description": "removed entity if any",
                "type": "Entity"
            },
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 119,
            "description": "Remove an entity from dirty entities by reference.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "removeEntityIfDirty",
            "params": [
                {
                    "name": "entity",
                    "description": "entity to remove",
                    "type": "[type]"
                }
            ],
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 133,
            "description": "Add a system to the ecs.",
            "itemtype": "method",
            "name": "addSystem",
            "params": [
                {
                    "name": "system",
                    "description": "system to add",
                    "type": "System"
                }
            ],
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 149,
            "description": "Remove a system from the ecs.",
            "itemtype": "method",
            "name": "removeSystem",
            "params": [
                {
                    "name": "system",
                    "description": "system reference",
                    "type": "System"
                }
            ],
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 163,
            "description": "\"Clean\" entities flagged as dirty by removing unecessary systems and\nadding missing systems.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "cleanDirtyEntities",
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\ecs.js",
            "line": 195,
            "description": "Update the ecs.",
            "itemtype": "method",
            "name": "update",
            "class": "ECS",
            "module": "ecs"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 51,
            "description": "The salt of this generator.",
            "itemtype": "property",
            "name": "salt",
            "type": "Number",
            "class": "UIDGenerator",
            "module": "uid"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 57,
            "description": "The counter used to generate unique sequence.",
            "itemtype": "property",
            "name": "uidCount",
            "type": "Number",
            "class": "UIDGenerator",
            "module": "uid"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 63,
            "description": "Create a new unique id.",
            "return": {
                "description": "An unique id.",
                "type": "Number"
            },
            "class": "UIDGenerator",
            "module": "uid"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 85,
            "description": "A reference to UIDGenerator class.",
            "itemtype": "property",
            "name": "UIDGenerator",
            "type": "Class",
            "class": "UID",
            "module": "uid"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 91,
            "description": "The default generator to use if an entity is created without id or generator instance.",
            "itemtype": "property",
            "name": "DefaultUIDGenerator",
            "type": "UIDGenerator",
            "class": "UID",
            "module": "uid"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 97,
            "description": "Return true if the entity id was salted by given salt",
            "params": [
                {
                    "name": "entityId",
                    "description": "Entity id to test",
                    "type": "String"
                },
                {
                    "name": "salt",
                    "description": "Salt to test",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the id was generated by the salt, false\notherwise",
                "type": "Boolean"
            },
            "class": "UID",
            "module": "uid"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 106,
            "description": "Return the next unique salt.",
            "itemtype": "method",
            "name": "nextSalt",
            "return": {
                "description": "A unique salt.",
                "type": "Number"
            },
            "class": "UID",
            "module": "uid"
        },
        {
            "file": "yagl-ecs\\src\\uid.js",
            "line": 123,
            "description": "Create a new generator with unique salt.",
            "itemtype": "method",
            "name": "nextGenerator",
            "return": {
                "description": "The created UIDGenerator.",
                "type": "UIDGenerator"
            },
            "class": "UID",
            "module": "uid"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nSet the parent ecs reference.",
            "line": " yagl-ecs\\src\\Entity.js:90"
        },
        {
            "message": "Missing item type\nSet the systems dirty flag so the ECS knows this entity \nneeds to recompute eligibility at the beginning of next \ntick.",
            "line": " yagl-ecs\\src\\Entity.js:100"
        },
        {
            "message": "Missing item type\nAdd a system to the entity.",
            "line": " yagl-ecs\\src\\Entity.js:113"
        },
        {
            "message": "Missing item type\nRemove a system from the entity.",
            "line": " yagl-ecs\\src\\Entity.js:122"
        },
        {
            "message": "Missing item type\nAdd a component to the entity. WARNING this method does not copy\ncomponents data but assign directly the reference for maximum\nperformances. Be sure not to pass the same component reference to\nmany entities.",
            "line": " yagl-ecs\\src\\Entity.js:135"
        },
        {
            "message": "Missing item type\nRemove a component from the entity. To preserve performances, we \nsimple set the component property to `undefined`. Therefore the \nproperty is still enumerable after a call to removeComponent()",
            "line": " yagl-ecs\\src\\Entity.js:148"
        },
        {
            "message": "Missing item type\nUpdate a set of components.",
            "line": " yagl-ecs\\src\\Entity.js:189"
        },
        {
            "message": "Missing item type\nDispose the entity.",
            "line": " yagl-ecs\\src\\Entity.js:201"
        },
        {
            "message": "Missing item type\nAdd an entity to the system entities.",
            "line": " yagl-ecs\\src\\System.js:35"
        },
        {
            "message": "Missing item type\nRemove an entity from the system entities. exit() handler is executed\nonly if the entity actually exists in the system entities.",
            "line": " yagl-ecs\\src\\System.js:46"
        },
        {
            "message": "Missing item type\nRetrieve an entity by id",
            "line": " yagl-ecs\\src\\ecs.js:55"
        },
        {
            "message": "Missing item type\nCreate a new unique id.",
            "line": " yagl-ecs\\src\\uid.js:63"
        },
        {
            "message": "Missing item type\nReturn true if the entity id was salted by given salt",
            "line": " yagl-ecs\\src\\uid.js:97"
        }
    ]
}